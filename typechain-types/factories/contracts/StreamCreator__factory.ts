/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StreamCreator,
  StreamCreatorInterface,
} from "../../contracts/StreamCreator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_dToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_investors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
    ],
    name: "RoundCreaated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "_pToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_dTokenImpl",
            type: "address",
          },
          {
            internalType: "string",
            name: "_xName",
            type: "string",
          },
          {
            internalType: "string",
            name: "_xSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_dName",
            type: "string",
          },
          {
            internalType: "string",
            name: "_dSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "_streamImpl",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "_investors",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "_allocations",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "_maturityTime",
            type: "uint256[]",
          },
        ],
        internalType: "struct StreamCreator.Round",
        name: "round",
        type: "tuple",
      },
    ],
    name: "CreateRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dImpl",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_investors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_createDToken",
    outputs: [
      {
        internalType: "address",
        name: "_dToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
    ],
    name: "_createStream",
    outputs: [
      {
        internalType: "address",
        name: "_stream",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_createXToken",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "_xToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToRound",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maturityTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_host",
        type: "address",
      },
      {
        internalType: "address",
        name: "_streamHub",
        type: "address",
      },
      {
        internalType: "contract SuperTokenFactory",
        name: "_tokenWrapperFactory",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "streamToId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fdf806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806397e724c81161005b57806397e724c814610112578063ac8a916014610142578063c0c53b8b14610174578063c7502567146101905761007d565b806312b620ed1461008257806368e7f8b9146100b2578063966da410146100e2575b600080fd5b61009c6004803603810190610097919061105e565b6101ac565b6040516100a9919061116a565b60405180910390f35b6100cc60048036038101906100c79190611185565b61025b565b6040516100d9919061116a565b60405180910390f35b6100fc60048036038101906100f79190611216565b610296565b6040516101099190611300565b60405180910390f35b61012c6004803603810190610127919061131b565b6103ea565b6040516101399190611357565b60405180910390f35b61015c60048036038101906101579190611372565b610402565b60405161016b939291906113b2565b60405180910390f35b61018e60048036038101906101899190611427565b610449565b005b6101aa60048036038101906101a5919061163e565b610511565b005b60006101de86886040516020016101c391906116cf565b604051602081830303815290604052805190602001206108e5565b90508573ffffffffffffffffffffffffffffffffffffffff1663445d9787848488886040518563ffffffff1660e01b815260040161021f94939291906118ee565b600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b505050509695505050505050565b600061028d838560405160200161027291906116cf565b604051602081830303815290604052805190602001206108e5565b90509392505050565b6000807f5f5ffa64f9b147690f5d8ec8cc5b5704631d3a77a7e940a3004dd53ae9e9b643905060008186600087876040516024016102d794939291906119b8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000846040516103829190611a52565b60006040518083038185875af1925050503d80600081146103bf576040519150601f19603f3d011682016040523d82523d6000602084013e6103c4565b606091505b5091509150808060200190518101906103dd9190611aa7565b9450505050509392505050565b60026020528060005260406000206000915090505481565b6001602052816000526040600020818154811061041e57600080fd5b9060005260206000209060030201600091509150508060000154908060010154908060020154905083565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600061052a826000015183604001518460600151610296565b905060006105518284602001518560e0015186610100015187608001518860a001516101ac565b905060005b8360e001515181101561089357600061057885600001518660c001518661025b565b90506105ca3382876101000151858151811061059757610596611ad4565b5b6020026020010151886000015173ffffffffffffffffffffffffffffffffffffffff166109bb909392919063ffffffff16565b846000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b385876101000151858151811061060357610602611ad4565b5b60200260200101516040518363ffffffff1660e01b8152600401610628929190611b03565b6020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190611b64565b508373ffffffffffffffffffffffffffffffffffffffff166345977d0386610100015184815181106106a05761069f611ad4565b5b60200260200101516040518263ffffffff1660e01b81526004016106c49190611357565b600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b5050505060006107026000610a44565b905061070e6000610a52565b8173ffffffffffffffffffffffffffffffffffffffff16637bcc343582600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876103e86040518763ffffffff1660e01b815260040161079796959493929190611c1b565b600060405180830381600087803b1580156107b157600080fd5b505af11580156107c5573d6000803e3d6000fd5b5050505060016000828152602001908152602001600020604051806060016040528088610100015186815181106107ff576107fe611ad4565b5b60200260200101518152602001428152602001886101200151868151811061082a57610829611ad4565b5b6020026020010151815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101556040820151816002015550505050808061088b90611cab565b915050610556565b507f05e4c32360c1c14c1cbb63e5bb73730ce3c613644cc561e01b6f35dddbd74089836000015183838660e001518761010001516040516108d8959493929190611cf3565b60405180910390a1505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f5915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90611da0565b60405180910390fd5b92915050565b610a3e846323b872dd60e01b8585856040516024016109dc93929190611dc0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a68565b50505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000610aca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b2f9092919063ffffffff16565b9050600081511115610b2a5780806020019051810190610aea9190611b64565b610b29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2090611e69565b60405180910390fd5b5b505050565b6060610b3e8484600085610b47565b90509392505050565b606082471015610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390611efb565b60405180910390fd5b610b9585610c5b565b610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f67565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610bfd9190611a52565b60006040518083038185875af1925050503d8060008114610c3a576040519150601f19603f3d011682016040523d82523d6000602084013e610c3f565b606091505b5091509150610c4f828286610c7e565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610c8e57829050610cde565b600083511115610ca15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd59190611f87565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2482610cf9565b9050919050565b610d3481610d19565b8114610d3f57600080fd5b50565b600081359050610d5181610d2b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610da582610d5c565b810181811067ffffffffffffffff82111715610dc457610dc3610d6d565b5b80604052505050565b6000610dd7610ce5565b9050610de38282610d9c565b919050565b600067ffffffffffffffff821115610e0357610e02610d6d565b5b602082029050602081019050919050565b600080fd5b6000610e2c610e2784610de8565b610dcd565b90508083825260208201905060208402830185811115610e4f57610e4e610e14565b5b835b81811015610e785780610e648882610d42565b845260208401935050602081019050610e51565b5050509392505050565b600082601f830112610e9757610e96610d57565b5b8135610ea7848260208601610e19565b91505092915050565b600067ffffffffffffffff821115610ecb57610eca610d6d565b5b602082029050602081019050919050565b6000819050919050565b610eef81610edc565b8114610efa57600080fd5b50565b600081359050610f0c81610ee6565b92915050565b6000610f25610f2084610eb0565b610dcd565b90508083825260208201905060208402830185811115610f4857610f47610e14565b5b835b81811015610f715780610f5d8882610efd565b845260208401935050602081019050610f4a565b5050509392505050565b600082601f830112610f9057610f8f610d57565b5b8135610fa0848260208601610f12565b91505092915050565b600080fd5b600067ffffffffffffffff821115610fc957610fc8610d6d565b5b610fd282610d5c565b9050602081019050919050565b82818337600083830152505050565b6000611001610ffc84610fae565b610dcd565b90508281526020810184848401111561101d5761101c610fa9565b5b611028848285610fdf565b509392505050565b600082601f83011261104557611044610d57565b5b8135611055848260208601610fee565b91505092915050565b60008060008060008060c0878903121561107b5761107a610cef565b5b600061108989828a01610d42565b965050602061109a89828a01610d42565b955050604087013567ffffffffffffffff8111156110bb576110ba610cf4565b5b6110c789828a01610e82565b945050606087013567ffffffffffffffff8111156110e8576110e7610cf4565b5b6110f489828a01610f7b565b935050608087013567ffffffffffffffff81111561111557611114610cf4565b5b61112189828a01611030565b92505060a087013567ffffffffffffffff81111561114257611141610cf4565b5b61114e89828a01611030565b9150509295509295509295565b61116481610d19565b82525050565b600060208201905061117f600083018461115b565b92915050565b60008060006060848603121561119e5761119d610cef565b5b60006111ac86828701610d42565b93505060206111bd86828701610d42565b92505060406111ce86828701610d42565b9150509250925092565b60006111e382610d19565b9050919050565b6111f3816111d8565b81146111fe57600080fd5b50565b600081359050611210816111ea565b92915050565b60008060006060848603121561122f5761122e610cef565b5b600061123d86828701611201565b935050602084013567ffffffffffffffff81111561125e5761125d610cf4565b5b61126a86828701611030565b925050604084013567ffffffffffffffff81111561128b5761128a610cf4565b5b61129786828701611030565b9150509250925092565b6000819050919050565b60006112c66112c16112bc84610cf9565b6112a1565b610cf9565b9050919050565b60006112d8826112ab565b9050919050565b60006112ea826112cd565b9050919050565b6112fa816112df565b82525050565b600060208201905061131560008301846112f1565b92915050565b60006020828403121561133157611330610cef565b5b600061133f84828501610d42565b91505092915050565b61135181610edc565b82525050565b600060208201905061136c6000830184611348565b92915050565b6000806040838503121561138957611388610cef565b5b600061139785828601610efd565b92505060206113a885828601610efd565b9150509250929050565b60006060820190506113c76000830186611348565b6113d46020830185611348565b6113e16040830184611348565b949350505050565b60006113f482610d19565b9050919050565b611404816113e9565b811461140f57600080fd5b50565b600081359050611421816113fb565b92915050565b6000806000606084860312156114405761143f610cef565b5b600061144e86828701610d42565b935050602061145f86828701610d42565b925050604061147086828701611412565b9150509250925092565b600080fd5b600080fd5b6000610140828403121561149b5761149a61147a565b5b6114a6610140610dcd565b905060006114b684828501611201565b60008301525060206114ca84828501610d42565b602083015250604082013567ffffffffffffffff8111156114ee576114ed61147f565b5b6114fa84828501611030565b604083015250606082013567ffffffffffffffff81111561151e5761151d61147f565b5b61152a84828501611030565b606083015250608082013567ffffffffffffffff81111561154e5761154d61147f565b5b61155a84828501611030565b60808301525060a082013567ffffffffffffffff81111561157e5761157d61147f565b5b61158a84828501611030565b60a08301525060c061159e84828501610d42565b60c08301525060e082013567ffffffffffffffff8111156115c2576115c161147f565b5b6115ce84828501610e82565b60e08301525061010082013567ffffffffffffffff8111156115f3576115f261147f565b5b6115ff84828501610f7b565b6101008301525061012082013567ffffffffffffffff8111156116255761162461147f565b5b61163184828501610f7b565b6101208301525092915050565b60006020828403121561165457611653610cef565b5b600082013567ffffffffffffffff81111561167257611671610cf4565b5b61167e84828501611484565b91505092915050565b60008160601b9050919050565b600061169f82611687565b9050919050565b60006116b182611694565b9050919050565b6116c96116c482610d19565b6116a6565b82525050565b60006116db82846116b8565b60148201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611724578082015181840152602081019050611709565b83811115611733576000848401525b50505050565b6000611744826116ea565b61174e81856116f5565b935061175e818560208601611706565b61176781610d5c565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6117a781610d19565b82525050565b60006117b9838361179e565b60208301905092915050565b6000602082019050919050565b60006117dd82611772565b6117e7818561177d565b93506117f28361178e565b8060005b8381101561182357815161180a88826117ad565b9750611815836117c5565b9250506001810190506117f6565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61186581610edc565b82525050565b6000611877838361185c565b60208301905092915050565b6000602082019050919050565b600061189b82611830565b6118a5818561183b565b93506118b08361184c565b8060005b838110156118e15781516118c8888261186b565b97506118d383611883565b9250506001810190506118b4565b5085935050505092915050565b600060808201905081810360008301526119088187611739565b9050818103602083015261191c8186611739565b9050818103604083015261193081856117d2565b905081810360608301526119448184611890565b905095945050505050565b600061195a826112cd565b9050919050565b61196a8161194f565b82525050565b6000819050919050565b600060ff82169050919050565b60006119a261199d61199884611970565b6112a1565b61197a565b9050919050565b6119b281611987565b82525050565b60006080820190506119cd6000830187611961565b6119da60208301866119a9565b81810360408301526119ec8185611739565b90508181036060830152611a008184611739565b905095945050505050565b600081519050919050565b600081905092915050565b6000611a2c82611a0b565b611a368185611a16565b9350611a46818560208601611706565b80840191505092915050565b6000611a5e8284611a21565b915081905092915050565b6000611a7482610cf9565b9050919050565b611a8481611a69565b8114611a8f57600080fd5b50565b600081519050611aa181611a7b565b92915050565b600060208284031215611abd57611abc610cef565b5b6000611acb84828501611a92565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050611b18600083018561115b565b611b256020830184611348565b9392505050565b60008115159050919050565b611b4181611b2c565b8114611b4c57600080fd5b50565b600081519050611b5e81611b38565b92915050565b600060208284031215611b7a57611b79610cef565b5b6000611b8884828501611b4f565b91505092915050565b6000611b9c826112cd565b9050919050565b611bac81611b91565b82525050565b6000611bbd826112cd565b9050919050565b611bcd81611bb2565b82525050565b6000819050919050565b600081600b0b9050919050565b6000611c05611c00611bfb84611bd3565b6112a1565b611bdd565b9050919050565b611c1581611bea565b82525050565b600060c082019050611c306000830189611348565b611c3d6020830188611ba3565b611c4a6040830187611bc4565b611c57606083018661115b565b611c64608083018561115b565b611c7160a0830184611c0c565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cb682610edc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ce857611ce7611c7c565b5b600182019050919050565b600060a082019050611d08600083018861115b565b611d15602083018761115b565b611d22604083018661115b565b8181036060830152611d3481856117d2565b90508181036080830152611d488184611890565b90509695505050505050565b7f455243313136373a2063726561746532206661696c6564000000000000000000600082015250565b6000611d8a6017836116f5565b9150611d9582611d54565b602082019050919050565b60006020820190508181036000830152611db981611d7d565b9050919050565b6000606082019050611dd5600083018661115b565b611de2602083018561115b565b611def6040830184611348565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611e53602a836116f5565b9150611e5e82611df7565b604082019050919050565b60006020820190508181036000830152611e8281611e46565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611ee56026836116f5565b9150611ef082611e89565b604082019050919050565b60006020820190508181036000830152611f1481611ed8565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611f51601d836116f5565b9150611f5c82611f1b565b602082019050919050565b60006020820190508181036000830152611f8081611f44565b9050919050565b60006020820190508181036000830152611fa18184611739565b90509291505056fea26469706673582212204f9edd2dcbc398168f0e00f7031b659268e96a0888c4d9c9fb7e2b90f20381d564736f6c634300080e0033";

type StreamCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreamCreator__factory extends ContractFactory {
  constructor(...args: StreamCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StreamCreator> {
    return super.deploy(overrides || {}) as Promise<StreamCreator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StreamCreator {
    return super.attach(address) as StreamCreator;
  }
  override connect(signer: Signer): StreamCreator__factory {
    return super.connect(signer) as StreamCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamCreatorInterface {
    return new utils.Interface(_abi) as StreamCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreamCreator {
    return new Contract(address, _abi, signerOrProvider) as StreamCreator;
  }
}
