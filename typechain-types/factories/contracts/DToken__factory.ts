/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DToken, DTokenInterface } from "../../contracts/DToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b6200020f565b6200003a60ff6200003d60201b60201c565b50565b60008060019054906101000a900460ff1615620000c75760018260ff161480156200007b575062000079306200014360201b620006bf1760201c565b155b620000bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b490620001ed565b60405180910390fd5b600090506200013e565b8160ff1660008054906101000a900460ff1660ff16106200011f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011690620001ed565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000620001d5602e8362000166565b9150620001e28262000177565b604082019050919050565b600060208201905081810360008301526200020881620001c6565b9050919050565b611d87806200021f6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063445d978711610071578063445d9787146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190611035565b60405180910390f35b6100f160048036038101906100ec91906110ff565b61032f565b6040516100fe919061115a565b60405180910390f35b61010f610352565b60405161011c9190611184565b60405180910390f35b61013f600480360381019061013a919061119f565b61035c565b60405161014c919061115a565b60405180910390f35b61015d61038b565b60405161016a919061120e565b60405180910390f35b61018d600480360381019061018891906110ff565b610394565b60405161019a919061115a565b60405180910390f35b6101bd60048036038101906101b891906114e9565b6103cb565b005b6101d960048036038101906101d491906115c0565b6104c3565b6040516101e69190611184565b60405180910390f35b6101f761050c565b6040516102049190611035565b60405180910390f35b610227600480360381019061022291906110ff565b61059e565b604051610234919061115a565b60405180910390f35b610257600480360381019061025291906110ff565b610615565b604051610264919061115a565b60405180910390f35b610287600480360381019061028291906115ed565b610638565b6040516102949190611184565b60405180910390f35b6060603680546102ac9061165c565b80601f01602080910402602001604051908101604052809291908181526020018280546102d89061165c565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a6106e2565b90506103478185856106ea565b600191505092915050565b6000603554905090565b6000806103676106e2565b90506103748582856108b3565b61037f85858561093f565b60019150509392505050565b60006012905090565b60008061039f6106e2565b90506103c08185856103b18589610638565b6103bb91906116bc565b6106ea565b600191505092915050565b60006103d76001610bc1565b905080156103fb576001600060016101000a81548160ff0219169083151502179055505b6104058585610cb1565b60005b83518110156104625761044f84828151811061042757610426611712565b5b602002602001015184838151811061044257610441611712565b5b6020026020010151610d0e565b808061045a90611741565b915050610408565b5080156104bc5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516104b391906117ce565b60405180910390a15b5050505050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606037805461051b9061165c565b80601f01602080910402602001604051908101604052809291908181526020018280546105479061165c565b80156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b5050505050905090565b6000806105a96106e2565b905060006105b78286610638565b9050838110156105fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f39061185b565b60405180910390fd5b61060982868684036106ea565b60019250505092915050565b6000806106206106e2565b905061062d81858561093f565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610759576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610750906118ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061197f565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108a69190611184565b60405180910390a3505050565b60006108bf8484610638565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610939578181101561092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610922906119eb565b60405180910390fd5b61093884848484036106ea565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a590611a7d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611b0f565b60405180910390fd5b610a28838383610e6e565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa690611ba1565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b4491906116bc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba89190611184565b60405180910390a3610bbb848484610e73565b50505050565b60008060019054906101000a900460ff1615610c385760018260ff16148015610bf05750610bee306106bf565b155b610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2690611c33565b60405180910390fd5b60009050610cac565b8160ff1660008054906101000a900460ff1660ff1610610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8490611c33565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610d00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf790611cc5565b60405180910390fd5b610d0a8282610e78565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7490611d31565b60405180910390fd5b610d8960008383610e6e565b8060356000828254610d9b91906116bc565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df191906116bc565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e569190611184565b60405180910390a3610e6a60008383610e73565b5050565b505050565b505050565b600060019054906101000a900460ff16610ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebe90611cc5565b60405180910390fd5b8160369080519060200190610edd929190610ef9565b508060379080519060200190610ef4929190610ef9565b505050565b828054610f059061165c565b90600052602060002090601f016020900481019282610f275760008555610f6e565b82601f10610f4057805160ff1916838001178555610f6e565b82800160010185558215610f6e579182015b82811115610f6d578251825591602001919060010190610f52565b5b509050610f7b9190610f7f565b5090565b5b80821115610f98576000816000905550600101610f80565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd6578082015181840152602081019050610fbb565b83811115610fe5576000848401525b50505050565b6000601f19601f8301169050919050565b600061100782610f9c565b6110118185610fa7565b9350611021818560208601610fb8565b61102a81610feb565b840191505092915050565b6000602082019050818103600083015261104f8184610ffc565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110968261106b565b9050919050565b6110a68161108b565b81146110b157600080fd5b50565b6000813590506110c38161109d565b92915050565b6000819050919050565b6110dc816110c9565b81146110e757600080fd5b50565b6000813590506110f9816110d3565b92915050565b6000806040838503121561111657611115611061565b5b6000611124858286016110b4565b9250506020611135858286016110ea565b9150509250929050565b60008115159050919050565b6111548161113f565b82525050565b600060208201905061116f600083018461114b565b92915050565b61117e816110c9565b82525050565b60006020820190506111996000830184611175565b92915050565b6000806000606084860312156111b8576111b7611061565b5b60006111c6868287016110b4565b93505060206111d7868287016110b4565b92505060406111e8868287016110ea565b9150509250925092565b600060ff82169050919050565b611208816111f2565b82525050565b600060208201905061122360008301846111ff565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61126b82610feb565b810181811067ffffffffffffffff8211171561128a57611289611233565b5b80604052505050565b600061129d611057565b90506112a98282611262565b919050565b600067ffffffffffffffff8211156112c9576112c8611233565b5b6112d282610feb565b9050602081019050919050565b82818337600083830152505050565b60006113016112fc846112ae565b611293565b90508281526020810184848401111561131d5761131c61122e565b5b6113288482856112df565b509392505050565b600082601f83011261134557611344611229565b5b81356113558482602086016112ee565b91505092915050565b600067ffffffffffffffff82111561137957611378611233565b5b602082029050602081019050919050565b600080fd5b60006113a261139d8461135e565b611293565b905080838252602082019050602084028301858111156113c5576113c461138a565b5b835b818110156113ee57806113da88826110b4565b8452602084019350506020810190506113c7565b5050509392505050565b600082601f83011261140d5761140c611229565b5b813561141d84826020860161138f565b91505092915050565b600067ffffffffffffffff82111561144157611440611233565b5b602082029050602081019050919050565b600061146561146084611426565b611293565b905080838252602082019050602084028301858111156114885761148761138a565b5b835b818110156114b1578061149d88826110ea565b84526020840193505060208101905061148a565b5050509392505050565b600082601f8301126114d0576114cf611229565b5b81356114e0848260208601611452565b91505092915050565b6000806000806080858703121561150357611502611061565b5b600085013567ffffffffffffffff81111561152157611520611066565b5b61152d87828801611330565b945050602085013567ffffffffffffffff81111561154e5761154d611066565b5b61155a87828801611330565b935050604085013567ffffffffffffffff81111561157b5761157a611066565b5b611587878288016113f8565b925050606085013567ffffffffffffffff8111156115a8576115a7611066565b5b6115b4878288016114bb565b91505092959194509250565b6000602082840312156115d6576115d5611061565b5b60006115e4848285016110b4565b91505092915050565b6000806040838503121561160457611603611061565b5b6000611612858286016110b4565b9250506020611623858286016110b4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061167457607f821691505b6020821081036116875761168661162d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116c7826110c9565b91506116d2836110c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117075761170661168d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061174c826110c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361177e5761177d61168d565b5b600182019050919050565b6000819050919050565b6000819050919050565b60006117b86117b36117ae84611789565b611793565b6111f2565b9050919050565b6117c88161179d565b82525050565b60006020820190506117e360008301846117bf565b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611845602583610fa7565b9150611850826117e9565b604082019050919050565b6000602082019050818103600083015261187481611838565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006118d7602483610fa7565b91506118e28261187b565b604082019050919050565b60006020820190508181036000830152611906816118ca565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611969602283610fa7565b91506119748261190d565b604082019050919050565b600060208201905081810360008301526119988161195c565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006119d5601d83610fa7565b91506119e08261199f565b602082019050919050565b60006020820190508181036000830152611a04816119c8565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611a67602583610fa7565b9150611a7282611a0b565b604082019050919050565b60006020820190508181036000830152611a9681611a5a565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611af9602383610fa7565b9150611b0482611a9d565b604082019050919050565b60006020820190508181036000830152611b2881611aec565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611b8b602683610fa7565b9150611b9682611b2f565b604082019050919050565b60006020820190508181036000830152611bba81611b7e565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611c1d602e83610fa7565b9150611c2882611bc1565b604082019050919050565b60006020820190508181036000830152611c4c81611c10565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611caf602b83610fa7565b9150611cba82611c53565b604082019050919050565b60006020820190508181036000830152611cde81611ca2565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611d1b601f83610fa7565b9150611d2682611ce5565b602082019050919050565b60006020820190508181036000830152611d4a81611d0e565b905091905056fea26469706673582212207458b6b125860c1986e50bdac30847e071412d1321228d1b69098a418f05fef564736f6c634300080e0033";

type DTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DToken__factory extends ContractFactory {
  constructor(...args: DTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DToken> {
    return super.deploy(overrides || {}) as Promise<DToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DToken {
    return super.attach(address) as DToken;
  }
  override connect(signer: Signer): DToken__factory {
    return super.connect(signer) as DToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DTokenInterface {
    return new utils.Interface(_abi) as DTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DToken {
    return new Contract(address, _abi, signerOrProvider) as DToken;
  }
}
